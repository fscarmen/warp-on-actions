# action.yml
name: 'Install WARP'
author: 'fscarmen <fscarmen@gmail.com>'
description: 'Install Cloudflare Warp on Github actions'

inputs:
  stack:
    description: 'Choose WARP stacks: IPv4/IPv6 only or dualstacks.'
    required: false
    default: 'dual'

  mode:
    description: 'Choose WARP mode: wireguard or client.'
    required: false
    default: 'wireguard'

runs:
  using: composite
  steps:
    - name: Install WARP
      run: |
        if [ "${{ inputs.mode }}" == 'client' ]; then
          echo "WARP mode: client warp+doh."
          sudo apt-get -y update
          curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          sudo apt-get update
          sudo apt-get install -y cloudflare-warp
          sudo warp-cli --accept-tos registration new
          sudo warp-cli --accept-tos mode warp+doh
          if [ "${{ inputs.stack }}" == 'ipv4' ]; then
            sudo warp-cli --accept-tos tunnel ip add-range ::0/0
          elif [ "${{ inputs.stack }}" == 'ipv6' ]; then
            sudo warp-cli --accept-tos tunnel ip add-range 0.0.0.0/0
          fi
          sudo warp-cli --accept-tos connect

        elif [ "${{ inputs.mode }}" == 'wireguard' ]; then
          echo "WARP mode: wireguard."
          sudo apt-get -y update
          if [ "$(lsb_release -is 2>/dev/null)" = "Ubuntu" ] && [ "$(lsb_release -rs | awk -F. '{print $1$2}')" -ge 2404 ]; then
            sudo apt-get -y install --no-install-recommends net-tools iproute2 resolvconf dnsutils iptables wireguard-tools
          else
            sudo apt-get -y install --no-install-recommends net-tools iproute2 openresolv dnsutils iptables wireguard-tools
          fi
          LAN=$(ip route get 192.168.193.10 | grep -oP 'src \K\S+')
          CONFIG="[Interface]
          PrivateKey = cKE7LmCF61IhqqABGhvJ44jWXp8fKymcMAEVAzbDF2k=
          Address = 172.16.0.2/32
          Address = fd01:5ca1:ab1e:823e:e094:eb1c:ff87:1fab/128
          PostUp = ip -4 rule add from $LAN lookup main
          PostDown = ip -4 rule delete from $LAN lookup main
          DNS = 1.1.1.1,8.8.8.8,8.8.4.4,2606:4700:4700::1111,2001:4860:4860::8888,2001:4860:4860::8844
          MTU = 1280
          
          [Peer]
          PublicKey = bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=
          "

          if [ "${{ inputs.stack }}" == 'ipv4' ]; then
            CONFIG+="AllowedIPs = 0.0.0.0/0
            "
          elif [ "${{ inputs.stack }}" == 'ipv6' ]; then
            CONFIG+="AllowedIPs = ::/0
            "
          else
            CONFIG+="AllowedIPs = 0.0.0.0/0
            AllowedIPs = ::/0
            "
          fi
          CONFIG+="Endpoint = engage.cloudflareclient.com:2408"
          echo "$CONFIG" | sed "s/^[ ]\+//g" | sudo tee /etc/wireguard/warp.conf
          sudo wg-quick up warp
          
        else
          echo -e "WARP mode: ${{ inputs.mode }}.\nYou can choose client or wireguard."
          exit 1
        fi          

        sleep 1
        echo -e "===============================\nIP:"
        echo "IPv4: $(sudo curl -sm8 --retry 3 -A Mozilla https://api-ipv4.ip.sb/geoip || sudo curl -s4m8 --retry 3 https://speed.cloudflare.com/meta)"
        echo "IPv6: $(sudo curl -sm8 --retry 3 -A Mozilla https://api-ipv6.ip.sb/geoip || sudo curl -s6m8 --retry 3 https://speed.cloudflare.com/meta)"

      shell: bash